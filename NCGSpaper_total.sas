/*------------------------------------------------*/
/*   1) Extraintestinal and intestinal symptoms   */
/*------------------------------------------------*/

/*IMPORT SAS - Questionnaires = ACUTE*/
PROC IMPORT DATAFILE="/folders/myfolders/Results_acute_phd_Julie_AG.xlsx"
	DBMS=XLSX
	OUT=WORK.gluten_quest;
	sheet="Questionnaires_SAS";
RUN;

PROC PRINT DATA=WORK.gluten_quest; 
RUN;

/* check distributions */
proc univariate data=gluten_quest;
var Vermoeid Krachtig Gespannen Opgeblazen Pijn;
histogram Vermoeid Krachtig Gespannen Opgeblazen Pijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

data Gluten_quest;
set Gluten_quest;
if Vermoeid = '.' then delta_Vermoeid = '.';
if Krachtig = '.' then delta_Krachtig = '.';
if Gespannen = '.' then delta_Gespannen = '.';
if Opgeblazen = '.' then delta_Opgeblazen = '.';
if Pijn = '.' then delta_Pijn = '.';
run;

proc univariate data=gluten_quest freq;
where time > -10;
var delta_Vermoeid delta_Krachtig delta_Boos delta_Gespannen delta_Neerslachtig delta_Honger delta_Opgeblazen delta_Volheid	delta_Misselijkheid delta_Opboeren delta_Krampen delta_Pijn;
histogram delta_Vermoeid delta_Krachtig delta_Boos delta_Gespannen delta_Neerslachtig delta_Honger delta_Opgeblazen delta_Volheid delta_Misselijkheid delta_Opboeren delta_Krampen delta_Pijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* distributions strongly zero inflated for most variables, transforming will probably not work for most variables */

/*-------------------------------*/
/*           VERMOEID            */
/*-------------------------------*/

/*        Check baseline differences       */
proc univariate data=gluten_quest;;
var Baseline_Vermoeid;
histogram Baseline_Vermoeid  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

data gluten_quest; 
set gluten_quest;  
log_baseline_Vermoeid = log10(1+baseline_Vermoeid);
run;

proc univariate data=gluten_quest;
var log_baseline_Vermoeid;
histogram log_baseline_Vermoeid  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;


proc mixed data=gluten_quest;
class condition visit;
where time = -10;
model Baseline_Vermoeid = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Vermoeid;
run;
	/* control for main effect of condition on baseline_Vermoeid values */

proc univariate data=residuals_Baseline_Vermoeid normaltest;
var student;
histogram / normal;
run;

/*      transformation needed?       */
proc univariate data=gluten_quest freq;
where time > -10;
var delta_Vermoeid ;
histogram delta_Vermoeid / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* Delta distribution is better than raw data */

/*Normalize using log transformation*/
data gluten_quest; 
set gluten_quest;  
log_delta_Vermoeid = log10(6+delta_Vermoeid);
run;

proc univariate data=gluten_quest;
var delta_Vermoeid log_delta_Vermoeid;
histogram delta_Vermoeid log_delta_Vermoeid  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* log_delta_Vermoeid is not better than delta_Vermoeid */

/* normalize distribution using BoxCox transformation */
data gluten_quest;
set gluten_quest;
z=0;
run;

proc transreg data=gluten_quest maxiter=0 nozeroconstant;
where time > -10;
   model BoxCox(delta_Vermoeid/parameter=6) = identity(z);
run;
	/* parameter is offset constant to make all values of the variable positive */

data gluten_quest;
set gluten_quest;
bc_delta_Vermoeid = ((delta_Vermoeid + 6)**0.75 -1)/0.75;
run;
	/* 0.75 = lambda parameter generated by proc transreg */

proc univariate data=gluten_quest;
var delta_Vermoeid bc_delta_Vermoeid;
histogram delta_Vermoeid bc_delta_Vermoeid / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* distribution of transformed variable is similar, maybe slightly worse than non-transformed */
	
/* CONCLUSION: delta_vermoeid has the best distribution */	


/* START: analysis*/
proc mixed data=gluten_quest;
where time > -10;
class subject group condition visit time Gender;
model delta_Vermoeid = group condition time condition*time group*condition group*time visit Baseline_Vermoeid Gender / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid1;
run;

proc mixed data=gluten_quest;
where time > -10;
class subject group condition visit time Gender;
model delta_Vermoeid = group condition time condition*time group*condition group*time visit Baseline_Vermoeid Gender / solution residual influence;
repeated condition time / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid2;
run;

proc mixed data=gluten_quest;
where time > -10;
class subject group condition visit time Gender;
model delta_Vermoeid = group condition time condition*time group*condition group*time visit Baseline_Vermoeid Gender / solution residual influence;
repeated condition time / subject=subject type=un@cs r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid3;
run;


/* separate variance-covariance structure per group */
proc mixed data=gluten_quest;
where time > -10 /* and -5 < Delta_Vermoeid < 6.5 ;*/;
class subject group condition visit time Gender;
model delta_Vermoeid = group condition time condition*time group*condition group*time visit Baseline_Vermoeid Gender / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid4;
run;
	/* fit is better with group=group */

	/* BUT need to add condition*visit = FINAL MODEL which is included in analysis overview */
proc mixed data=gluten_quest;
where time > -10 ;
class subject group condition visit time Gender;
model delta_Vermoeid = group condition time condition*time group*condition group*time visit condition*visit Baseline_Vermoeid Gender / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid4;
run;


proc univariate data=residuals_delta_Vermoeid4 normaltest;
var student;
histogram / normal;
run;
/* residuals not normal but symmetrical */

/*        graph color      */
proc datasets;
modify Gluten_quest;
      label Delta_Vermoeid='Change in fatigue scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

/* for interaction effect */
data Gluten_quest;
set Gluten_quest;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="vermoeid_inter6_test" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where -5 < Delta_Vermoeid < 6.5 ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="vermoeid_patient" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="vermoeid_condition6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="vermoeid_group6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="vermoeid_inter_BW_cal8" outputfmt=png noborder width = 550 mm height= 500 mm;
ods html path="\folders\myfolders\images" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall noautolegend;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid dashdotdot);
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=10) lineattrs=(/*pattern=solid*/ thickness=4) 
limitattrs=(pattern=solid thickness=4) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=topleft valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
run;

ods graphics on / imagename="vermoeid_group_BW_phd_cal" outputfmt=tiff noborder width = 550 mm height= 500 mm;
ods html path="\Projects\Glutenstudie\Paper_AG\Afbeeldingen" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall noautolegend;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid);
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=10) lineattrs=(/*pattern=solid*/ thickness=4) limitattrs=(pattern=solid thickness=4) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=4 location=inside position=topleft valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
run;


/*-------------------------------*/
/*           KRACHTIG            */
/*-------------------------------*/

/*        Check BASELINE differences       */
proc univariate data=gluten_quest;
var Baseline_Krachtig;
histogram Baseline_Krachtig  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Transformation is 
slightly worse than non-transformed */

/* check for main effect of condition on baseline values */
proc mixed data=gluten_quest;
class condition visit;
where time = -10;
model Baseline_Krachtig = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Krachtig1;
run;
	/* type = un fit better than type = cs */
	/* ---> control for main effect of condition for baseline_Krachtig values */

proc univariate data=residuals_Baseline_Krachtig1 normaltest;
var student;
histogram / normal;
run;

/*  Transformation needed?       */
proc univariate data=gluten_quest freq;
where time > -10;
var delta_Krachtig ;
histogram delta_Krachtig / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* There are outliers, exclude the outliers */
proc univariate data=gluten_quest freq;
where time > -10 and -5 < delta_Krachtig < 4.09 ;
var delta_Krachtig ;
histogram delta_Krachtig / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* distribution without outliers is better */

proc capability data=gluten_quest all normaltest;
where time > -10 and -5 < delta_Krachtig < 4.09;
var delta_Krachtig;
run;

/*Normalize using log transformation*/
data gluten_quest; 
set gluten_quest;  
log_delta_Krachtig = log10(802+delta_Krachtig);
run;

proc univariate data=gluten_quest;
var log_delta_Krachtig;
histogram log_delta_Krachtig  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* log_delta_Krachtig is not better than delta_Krachtig */

/* normalize distribution using BoxCox transformation */
data gluten_quest;
set gluten_quest;
z=0;
run;

proc transreg data=gluten_quest maxiter=0 nozeroconstant;
where time > -10;
   model BoxCox(delta_Krachtig/parameter=8) = identity(z);
run;
	/* parameter is offset constant to make all values of the variable positive */

data gluten_quest;
set gluten_quest;
bc_delta_Krachtig = ((delta_Krachtig + 8)**1.75 -1)/1.75;
run;
	/* 1.75 = lambda parameter generated by proc transreg */

proc univariate data=gluten_quest;
var bc_delta_Krachtig;
histogram bc_delta_Krachtig / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* Conclusion: untransformed data is better */


/* START analyses */
proc mixed data=gluten_quest;
where time > -10 and -5 < delta_Krachtig < 4.09;
class subject condition visit time group Gender;
model delta_Krachtig = group condition time condition*time group*condition group*time visit Gender Baseline_Krachtig  / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans group*condition/ slice=group slice=condition;
ods output "Influence Diagnostics"=residuals_bc_delta_Krachtig;
run;

proc mixed data=gluten_quest;
where time > -10 and -5 < delta_Krachtig < 4.09;
class subject condition visit time group Gender;
model delta_Krachtig = group condition time condition*time group*condition group*time visit Gender Baseline_Krachtig / solution residual influence;
repeated condition time / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group*condition / slice=group slice =condition;
ods output "Influence Diagnostics"=residuals_bc_delta_Krachtig;
run;

proc mixed data=gluten_quest;
where time > -10 and -5 < delta_Krachtig < 4.09;
class subject condition visit time group Gender;
model delta_Krachtig = group condition time condition*time group*condition group*time visit Gender Baseline_Krachtig / solution residual influence;
repeated condition time / subject=subject type=un@cs r rcorr;
lsmeans condition;
lsmeans group*condition / slice=group slice =condition;
ods output "Influence Diagnostics"=residuals_bc_delta_Krachtig;
run;

/* Next check if AIC is better with or without group=group*/
proc mixed data=gluten_quest;
where time > -10 and -5 < delta_Krachtig < 4.09;
class subject condition visit time group Gender;
model delta_Krachtig = group condition time condition*time group*condition group*time visit Gender Baseline_Krachtig  / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans group*condition/ slice=group slice=condition;
ods output "Influence Diagnostics"=residuals_delta_Krachtig4;
run;
	/* AIC is better with group=group */

	/* add with condition*visit = FINAL model */
proc mixed data=gluten_quest;
where time > -10 and -5 < delta_Krachtig < 4.09;
class subject condition visit time group Gender;
model delta_Krachtig = group condition time condition*time group*condition group*time visit condition*visit Gender Baseline_Krachtig  / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans group*condition/ slice=group slice=condition;
ods output "Influence Diagnostics"=residuals_delta_Krachtig4;
run;

proc univariate data=residuals_delta_Krachtig4 normaltest;
var student;
histogram / normal;
run;

/* graph color */
proc datasets;
modify Gluten_quest;
      label Delta_Krachtig='Change in vigour scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="krachtig_inter6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */ 
ods graphics on / imagename="krachtig_healthy" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_patient" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="krachtig_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */

ods graphics on / imagename="Krachtig_interaction_BW" outputfmt=tiff noborder width = 550 mm height= 500 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid dashdotdot);
vline time / response=Delta_Krachtig stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=10) lineattrs=(/*pattern=solid*/ thickness=4) 
limitattrs=(pattern=solid thickness=4) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
run;

/*-------------------------------*/
/*        GESPANNEN/TENSE        */
/*-------------------------------*/

/*        Check baseline differences       */
proc univariate data=gluten_quest;
var Baseline_Gespannen;
histogram Baseline_Gespannen  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Transformation is 
better with BoxCox */
/* normalize distribution using BoxCox transformation */
data gluten_quest;
set gluten_quest;
z=0;
run;

proc transreg data=gluten_quest maxiter=0 nozeroconstant;
   model BoxCox(Baseline_Gespannen/parameter=1) = identity(z);
run;
	/* parameter is offset constant to make all values of the variable positive */

data gluten_quest;
set gluten_quest;
bc_Baseline_Gespannen= ((Baseline_Gespannen + 1)**-1.75 -1)/-1.75;
run;
	
proc univariate data=gluten_quest;
var bc_Baseline_Gespannen;
histogram bc_Baseline_Gespannen/ normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* BoxCox is better than untransformed or log, work with BoxCox */

proc mixed data=gluten_quest;
class condition visit;
where time = -10;
model bc_Baseline_Gespannen = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Gespannen;
run;
	/* type=un fit better than type=cs*/
	/* no significant main effect of condition --> no correction voor baseline differences */

proc univariate data=residuals_Baseline_Gespannen normaltest;
var student;
histogram / normal;
run;

/* explorative: effect of group */
proc mixed data=gluten_quest;
class condition group;
where time = -10;
model bc_Baseline_Gespannen = condition condition*group group / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Baseline_Gespannen_gr;
run;

proc univariate data=residuals_Baseline_Gespannen_gr normaltest;
var student;
histogram / normal;
run;

/* check distributions delta_gespannen */
proc univariate data=gluten_quest freq;
where time > -10;
var delta_Gespannen;
histogram delta_Gespannen / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* distributions strongly zero inflated for most variables, transforming will probably not work for most variables */

/* Divide into tert/quart/..  */
proc freq data=Gluten_quest;
where time > -10;
table delta_Gespannen;
run; 
/* 29.73 zeros*/ 

/*DIVIDE IN QUANT */
data Gluten_quest;
set Gluten_quest;
if delta_Gespannen <= -0.40 then delta_Gespannen_quart = -2;
if -0.40 < delta_Gespannen < 0 then delta_Gespannen_quart = -1;
if delta_Gespannen = 0 then delta_Gespannen_quart = 0;
if delta_Gespannen > 0 then delta_Gespannen_quart = 1;
if delta_Gespannen = '.' then delta_Gespannen_quart = '.';
run;

proc freq data=gluten_quest;
where time > -10;
table delta_Gespannen_quart;
run;

/* TIME AS CATEGORICAL VARIABLE */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Gespannen_quart time Gender;
model delta_Gespannen_quart(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
run;
	/*fit is better with type=un*/

proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group bc_Baseline_Gespannen delta_Gespannen_quart time Gender;
model delta_Gespannen_quart(descending) = condition time group bc_Baseline_Gespannen condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un group=group g;
run;
	/* fit  without group=group is better */

/* Focus study: check post hoc for condition between group, corrected for multiple testing */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Gespannen_quart time Gender;
model delta_Gespannen_quart(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
estimate 'gluten VS placebo in healthy' condition 1 -1 condition*group 1 0 -1 0 / exp adjust=bon cl;
estimate 'gluten VS placebo in NCGS' condition 1 -1 condition*group 0 1 0 -1 / exp adjust=bon cl;
run;

	/* with condition*visit*/
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Gespannen_quart time Gender;
model delta_Gespannen_quart(descending) = condition time group condition*visit condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
estimate 'gluten VS placebo in healthy' condition 1 -1 condition*group 1 0 -1 0 / exp adjust=bon cl;
estimate 'gluten VS placebo in NCGS' condition 1 -1 condition*group 0 1 0 -1 / exp adjust=bon cl;
run;

/* graph color*/
proc datasets;
modify Gluten_quest;
      label Delta_Gespannen='Change in tension scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="Gespannen_inter6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="gespannen_patient" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="gespannen_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */
ods graphics on / imagename="gespannen_healthy_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


ods graphics on / imagename="gespannen_patient_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline time / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph TERT */
data Gluten_quest;
set Gluten_quest;
if delta_Gespannen <= -0.40 then delta_Gespannen_quart = -2;
if -0.40 < delta_Gespannen < 0 then delta_Gespannen_quart = -1;
if delta_Gespannen = 0 then delta_Gespannen_quart = 0;
if delta_Gespannen > 0 then delta_Gespannen_quart = 1;
if delta_Gespannen = '.' then delta_Gespannen_quart = '.';
run;

/* graph color Gespannen */
proc datasets;
modify Gluten_quest;
	  label Delta_gespannen_quart='Change in tension scores from baseline (ordinal values)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

/* for interaction effect */
data Gluten_quest;
set Gluten_quest;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="gespannen_inter_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*interaction split out */
ods graphics on / imagename="gespannen_hv_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_pat_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effect */
ods graphics on / imagename="gespannen_group_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="gespannen_condition_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors= (STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */
ods graphics on / imagename="Gespannen_inter_BW_cal8" outputfmt=tiff noborder width = 550 mm height = 500 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall noautolegend;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid dashdotdot);
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=10) lineattrs=(/*pattern=solid*/ thickness=4) 
limitattrs=(pattern=solid thickness=4) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=bottomleft valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
run;

ods graphics on / imagename="Gespannen_group_tert_BW_phd" outputfmt=tiff noborder width = 550 mm height = 500 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid);
vline time / response=delta_gespannen_quart stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=10) lineattrs=(/*pattern=solid*/ thickness=4) 
limitattrs=(pattern=solid thickness=4) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=bottomleft valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic Weight=Bold */) min=-2 max=1 labelattrs=(Color=Black Family=Calibri Size=24 /* Style=Italic */ /*Weight=Bold*/);
run;

/*-------------------------------*/
/*      OPGEBLAZEN/BLOATING      */
/*-------------------------------*/

/*        Check BASELINE differences       */
proc univariate data=gluten_quest;
var Baseline_Opgeblazen;
histogram Baseline_Opgeblazen  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Transformation is 
better with log transformation */
/*Normalize using log transformation*/
data gluten_quest; 
set gluten_quest;  
log_Baseline_Opgeblazen = log10(1+Baseline_Opgeblazen);
run;

proc univariate data=gluten_quest;
var log_Baseline_Opgeblazen;
histogram log_Baseline_Opgeblazen  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* check for main effect of condition on baseline values */
proc mixed data=gluten_quest;
class condition visit;
where time = -10;
model log_Baseline_Opgeblazen = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Opgebl_log2;
run;
	/* type = cs fit better than type = un */
		
proc univariate data=residuals_Baseline_Opgebl_log2 normaltest;
var student;
histogram / normal;
run;

/* Explorative: check per group */
proc mixed data=gluten_quest;
class condition group;
where time = -10;
model log_Baseline_Opgeblazen = condition group group*condition / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans group*condition / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Baseline_Opgebl_gr;
run;
	
proc univariate data=residuals_Baseline_Opgebl_gr normaltest;
var student;
histogram / normal;
run;

/* Check distributions from delta values */
proc univariate data=gluten_quest freq;
where time > -10;
var delta_Opgeblazen ;
histogram delta_Opgeblazen / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* distributions strongly zero inflated, divide in quant */

/* check distribution to devide into tert/quart/.. */
proc freq data=Gluten_quest;
where time > -10;
table delta_Opgeblazen;
run; 
	/* 19.55% = zeros*/ 

/* DIVIDE IN QUART. */
data Gluten_quest;
set Gluten_quest;
if delta_Opgeblazen <= -0.75 then delta_Opgeblazen_quint = -2;
if -0.75 < delta_Opgeblazen < 0 then delta_Opgeblazen_quint = -1;
if delta_Opgeblazen = 0 then delta_Opgeblazen_quint = 0;
if 0 < delta_Opgeblazen <= 0.5 then delta_Opgeblazen_quint = 1;
if delta_Opgeblazen > 0.5 then delta_Opgeblazen_quint = 2;
if delta_Opgeblazen = '.' then delta_Opgeblazen_quint = '.';
run;

proc freq data=gluten_quest;
where time > -10;
table delta_Opgeblazen_quint;
run;

/* TIME AS CATEGORICAL VARIABLE */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Opgeblazen_quint time Gender;
model delta_Opgeblazen_quint(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
run;
	/* met type=un fit better*/

proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Opgeblazen_quint time Gender;
model delta_Opgeblazen_quint(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un group=group g;
run;
	/* fit  zonder group=group is better */

/* Check post hoc for condition*group, corrected voor multiple testing */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Opgeblazen_quint time Gender;
model delta_Opgeblazen_quint(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
estimate 'gluten VS placebo in healthy' condition 1 -1 condition*group 1 0 -1 0 / exp adjust=bon cl;
estimate 'gluten VS placebo in NCGS' condition 1 -1 condition*group 0 1 0 -1 / exp adjust=bon cl;
run;

	/* with condition*visit*/
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Opgeblazen_quint time Gender;
model delta_Opgeblazen_quint(descending) = condition time group condition*visit condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
estimate 'gluten VS placebo in healthy' condition 1 -1 condition*group 1 0 -1 0 / exp adjust=bon cl;
estimate 'gluten VS placebo in NCGS' condition 1 -1 condition*group 0 1 0 -1 / exp adjust=bon cl;
run;

/* graph color BLOATING */
data Gluten_quest;
set Gluten_quest;
if delta_Opgeblazen <= -0.75 then delta_Opgeblazen_quint = -2;
if -0.75 < delta_Opgeblazen < 0 then delta_Opgeblazen_quint = -1;
if delta_Opgeblazen = 0 then delta_Opgeblazen_quint = 0;
if 0 < delta_Opgeblazen <= 0.5 then delta_Opgeblazen_quint = 1;
if delta_Opgeblazen > 0.5 then delta_Opgeblazen_quint = 2;
if delta_Opgeblazen = '.' then delta_Opgeblazen_quint = '.';
run;

proc datasets;
modify Gluten_quest;
      label Delta_Opgeblazen='Change in bloating scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

/* interaction split out */
ods graphics on / imagename="opgeblazen_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;

proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effect */
ods graphics on / imagename="opgeblazen_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors= (STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods printer close;
ods html path="D:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures";

/* graph black & white */
ods graphics on / imagename="opgeblazen_healthy_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_patient_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline time / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph TERT */
data Gluten_quest;
set Gluten_quest;
if delta_Opgeblazen <= -0.75 then delta_Opgeblazen_quint = -2;
if -0.75 < delta_Opgeblazen < 0 then delta_Opgeblazen_quint = -1;
if delta_Opgeblazen = 0 then delta_Opgeblazen_quint = 0;
if 0 < delta_Opgeblazen <= 0.5 then delta_Opgeblazen_quint = 1;
if delta_Opgeblazen > 0.5 then delta_Opgeblazen_quint = 2;
if delta_Opgeblazen = '.' then delta_Opgeblazen_quint = '.';
run;

/* graph color BLOATING */
proc datasets;
modify Gluten_quest;
	  label Delta_Opgeblazen_quint='Change in bloating scores from baseline (ordinal values)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/*interaction*/
ods graphics on / imagename="opgeblazen_inter6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_Opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="opgeblazen_hv_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_pat_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effect */
ods graphics on / imagename="opgeblazen_group_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_condition_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors= (STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */
ods graphics on / imagename="opgeblazen_inter_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


ods graphics on / imagename="opgeblazen_healthy_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_patient__tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_condition_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_group_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ds graphics on / imagename="opgeblazen_condition_tert_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled) datalinepatterns=(solid);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_group_tert_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_opgeblazen_quint stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


/*-------------------------------*/
/*    		  PAIN	 		     */
/*-------------------------------*/
/*        Check BASELINE differences       */
proc univariate data=gluten_quest;
var Baseline_Pijn;
histogram Baseline_Pijn  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. BoxCox transformation
is slightly better*/

/* normalize distribution using BoxCox transformation */
data gluten_quest;
set gluten_quest;
z=0;
run;

proc transreg data=gluten_quest maxiter=0 nozeroconstant;
where time > -10;
   model BoxCox(Baseline_Pijn/parameter=1) = identity(z);
run;
	/* parameter is offset constant to make all values of the variable positive */

data gluten_quest;
set gluten_quest;
bc_Baseline_Pijn = ((Baseline_Pijn + 1)**-2.5 -1)/-2.5;
run;
	/* -2.5 = lambda parameter generated by proc transreg */

proc univariate data=gluten_quest;
var bc_Baseline_Pijn log_Baseline_Pijn;
histogram bc_Baseline_Pijn log_Baseline_Pijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* distribution of bc transformation is slightly better than non-transformed */

/* check for main effect of condition on baseline values */
proc mixed data=gluten_quest;
class condition visit;
where time = -10;
model bc_Baseline_Pijn = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Pijn_bc;
run;
	/* type = cs fit better than type = un */
		
proc univariate data=residuals_Baseline_Pijn_bc normaltest;
var student;
histogram / normal;
run;

/* Check explorative group effect */
proc mixed data=gluten_quest;
class condition group;
where time = -10;
model bc_Baseline_Pijn = condition group group*condition / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans group*condition / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Base_Pijn_gr;
run;
	/* type=cs fit better */

proc univariate data=residuals_Base_Pijn_gr normaltest;
var student;
histogram / normal;
run;

/* Check distributions from delta values */
proc univariate data=gluten_quest freq;
where time > -10;
var delta_Pijn ;
histogram delta_Pijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* distributions strongly zero inflated, divide into tert/quant */

proc univariate data=gluten_quest freq;
where time > -10 and group="Patient";
var delta_Pijn ;
histogram delta_Pijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* for dividing into tert/quart/..check distribution */
proc freq data=Gluten_quest;
where time > -10;
table delta_Pijn;
run; 
	/* 38.35% zeros*/ 

/*DIVIDE IN TERT. */
data Gluten_quest;
set Gluten_quest;
if delta_Pijn < 0 then delta_Pijn_tert = -1;
if delta_Pijn = 0 then delta_Pijn_tert = 0;
if delta_Pijn > 0 then delta_Pijn_tert = 1;
if delta_Pijn = '.' then delta_Pijn_tert = '.';
run;

proc freq data=gluten_quest;
where time > -10;
table delta_Pijn_tert;
run;

/* TIME AS CATEGORICAL VARIABLE */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Pijn_tert time Gender;
model delta_Pijn_tert(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
run;

proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Pijn_tert time Gender;
model delta_Pijn_tert(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject g;
run;
	/* fit with type=un is better*/

proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Pijn_tert time Gender;
model delta_Pijn_tert(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un group=group g;
run;
	/* fit  without group=group is better */

/* check post hoc for condition*group, corrected for multiple testing */
proc glimmix data=gluten_quest method=quad(qpoints=5) initglm;
where time > -10;
class subject condition visit group delta_Pijn_tert time Gender;
model delta_Pijn_tert(descending) = condition time group condition*time visit group*condition group*time Gender / dist=multinomial link=cumlogit solution or chisq cl;
random visit / subject=subject type=un g;
estimate 'gluten VS placebo in healthy' condition 1 -1 condition*group 1 0 -1 0 / exp adjust=bon cl;
estimate 'gluten VS placebo in NCGS' condition 1 -1 condition*group 0 1 0 -1 / exp adjust=bon cl;
estimate 'gluten in hv vs ncgs' group 1 -1 condition*group 1 -1 / exp adjust=bon cl;
estimate 'placebo in hv vs ncgs' group 1 -1  condition*group 0 0 1 -1 / exp adjust=bon cl;
run;

/* IMAGE PAIN */
proc datasets;
modify Gluten_quest;
      label Delta_Pijn='Change in pain scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group2 = "Healthy volunteers";
if group = "Patient" then group2 = "NCGS";
run;

ods graphics on / imagename="pijn_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_patient" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="pijn_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=group2 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */
ods graphics on / imagename="pijn_healthy_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_patient_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline time / response=Delta_Pijn stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph tert */
/* color graph */
proc datasets;
modify Gluten_quest;
      label Delta_Pijn_tert='Change in pain scores from baseline (ordinal values)';
      label Time='Time (minutes)';
run;

data Gluten_quest;
set Gluten_quest;
if group = "Healthy" then group2 = "Healthy volunteers";
if group = "Patient" then group2 = "NCGS";
run;

ods graphics on / imagename="pijn_hv_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_patient_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="pijn_group_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=group2 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_condition_tert" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* graph black & white */
ods graphics on / imagename="pijn_healthy_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Healthy" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_patient_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
where group = "Patient" ; /* change for one group */
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_condition_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="pijn_group_tert_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=Gluten_quest noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline time / response=delta_pijn_tert stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* IMPORT SAS - Questionnaires = SUB-ACUTE*/
PROC IMPORT DATAFILE="/folders/myfolders/Results_subacute_phd_AG.xlsx"
	DBMS=XLSX
	OUT=WORK.gluten_sa;
	sheet="SAS_POMS_only_delta";
RUN;

PROC PRINT DATA=WORK.gluten_sa; 
RUN;

/*-------------------------------*/
/*           VERMOEID            */
/*-------------------------------*/

/*        Check BASELINE differences       */
proc univariate data=gluten_sa;
var Baseline_Vermoeid;
histogram Baseline_Vermoeid  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Log transformation is 
	the best */
/*Normalize using log transformation*/
data gluten_sa; 
set gluten_sa;  
log_Baseline_Vermoeid = log10(10+Baseline_Vermoeid);
run;

proc univariate data=gluten_sa;
var log_Baseline_Vermoeid;
histogram log_Baseline_Vermoeid  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* log_Baseline_Vermoeid is beter dan untransformed data */

/* check for main effect of condition on baseline values */
proc mixed data=gluten_sa;
class condition visit;
where Day = 3;
model log_Baseline_Vermoeid = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Vermoeid;
run;
	/* type = cs fit better than type = un */
		/* ---> Do not control for differences in baseline_Vermoeid values */

proc univariate data=residuals_Baseline_Vermoeid normaltest;
var student;
histogram / normal;
run;

/* Check explorative per group */
proc mixed data=gluten_sa;
class condition group;
where day = 3 ;
model Baseline_Vermoeid = condition group group*condition / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans group;
lsmeans group*condition / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Baseline_Vermoeid_gr;
run;
	/* type = cs fit better than type = un */
		
proc univariate data=residuals_Baseline_Vermoeid_gr normaltest;
var student;
histogram / normal;
run;

/* ANALYSES */
/*      transformation       */
proc univariate data=gluten_sa freq;
var delta_Vermoeid ;
histogram delta_Vermoeid / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* delta untransformed is normally distributed */

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Vermoeid = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid;
run;

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Vermoeid = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) /*group=group*/ r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid2;
run; 
/* best fitting model -> toevoegen group=group: without is better */

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Vermoeid = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@cs r rcorr;
lsmeans condition;
lsmeans day;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*day / slice=condition slice=day;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid3;
run;
/* best fitting model */

/* with condition*visit */
proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Vermoeid = group condition Day condition*Day group*condition group*Day visit condition*visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans day;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*day / slice=condition slice=day;
ods output "Influence Diagnostics"=residuals_delta_Vermoeid3;
run;

proc univariate data=residuals_delta_Vermoeid3 normaltest;
var student;
histogram / normal;
run;

/*        color graph      */
proc datasets;
modify Gluten_graph;
      label Delta_vermoeid='Change in fatigue scores from baseline (100mm VAS)';
run;

data gluten_graph;
set gluten_graph;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

ods graphics on / imagename="Vermoeid_sa_pat" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Vermoeid_sa_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
/*condition*/
ods graphics on / imagename="Vermoeid_sa_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="Vermoeid_sa_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline Day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="vermoeid_sa_pat_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="vermoeid_sa_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="vermoeid_sa_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="vermoeid_sa_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline day / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


/*-------------------------------*/
/*           KRACHTIG            */
/*-------------------------------*/

/*        Check BASELINE differences       */
proc univariate data=gluten_sa;
var Baseline_Krachtig;
histogram Baseline_Krachtig  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Data is best distributed
untransformed */	

/* check for main effect of condition on baseline values */
proc mixed data=gluten_sa;
class condition visit;
where Day = 3;
model Baseline_Krachtig = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Krachtig;
run;
	/* type = cs fit better than type = un */
		/* ---> Do not control for differences baseline_Vermoeid values */

proc univariate data=residuals_Baseline_Krachtig normaltest;
var student;
histogram / normal;
run;

/* Check explorative per group */
proc mixed data=gluten_sa;
class condition group;
where day = 3 ;
model Baseline_Krachtig = condition group group*condition / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans group;
lsmeans group*condition / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Baseline_Krachtig_gr;
run;
/* type = cs fit better than type = un */
		
proc univariate data=residuals_Baseline_Krachtig_gr normaltest;
var student;
histogram / normal;
run;

/*      transformation needed?       */
proc univariate data=gluten_sa freq;
var delta_Krachtig ;
histogram delta_Krachtig / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* delta untransformed is normally distributed */

proc capability data=gluten_sa all normaltest;
var delta_krachtig;
run;

/*        analysis        */
proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Krachtig = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Krachtig;
run;

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Krachtig = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) group=group r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Krachtig2;
run;
/* beste fit + group=group added AIC better */

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Krachtig = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@cs r rcorr;
lsmeans condition Day;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Krachtig3;
run;

proc univariate data=residuals_delta_Krachtig2 normaltest;
var student;
histogram / normal;
run;

/*        color graph      */
proc datasets;
modify Gluten_graph;
      label Delta_krachtig='Change in vigor scores from baseline (100mm VAS)';
run;

data gluten_graph;
set gluten_graph;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

ods graphics on / imagename="krachtig_sa_pat" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_sa_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
/*condition*/
ods graphics on / imagename="krachtig_sa_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="krachtig_sa_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline Day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="krachtig_sa_pat_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_sa_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_sa_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="krachtig_sa_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline day / response=Delta_krachtig stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=3 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*-------------------------------*/
/*        GESPANNEN/TENSE        */
/*-------------------------------*/
/*        Check BASELINE differences       */
proc univariate data=gluten_sa;
var Baseline_Gespannen;
histogram Baseline_Gespannen  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Transformation is better
with BoxCox */

/* normalize distribution using BoxCox transformation */
data gluten_sa;
set gluten_sa;
z=0;
run;

proc transreg data=gluten_sa maxiter=0 nozeroconstant;
   model BoxCox(Baseline_Gespannen/parameter=1) = identity(z);
run;
	/* parameter is offset constant to make all values of the variable positive */

data gluten_sa;
set gluten_sa;
bc_Baseline_Gespannen = ((Baseline_Gespannen + 1)**-0.75 -1)/-0.75;
run;
	/* -0.75 = lambda parameter generated by proc transreg */

proc univariate data=gluten_sa;
var bc_Baseline_Gespannen;
histogram bc_Baseline_Gespannen / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* bc transformation looks better */ 

/* check for main effect of condition on baseline values */
proc mixed data=gluten_sa;
class condition visit;
where Day = 3;
model bc_Baseline_Gespannen = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Gespannen;
run;
	/* type = un fit better than type = cs */
		/* ---> Control for differences in baseline_Vermoeid values */

proc univariate data=residuals_Baseline_Gespannen normaltest;
var student;
histogram / normal;
run;

/* Check explorative for each group */
proc mixed data=gluten_sa;
class condition group;
where day = 3 ;
model bc_Baseline_Gespannen = condition group group*condition / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans group*condition / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Baseline_Gespannen_gr;
run;
	/* type = un fit better than type = cs */
		
proc univariate data=residuals_Baseline_Gespannen_gr normaltest;
var student;
histogram / normal;
run;

/* exploratief per order bekijken */
proc mixed data=gluten_sa;
class condition order;
where day = 3;
model bc_Baseline_Gespannen = condition order order*condition / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans condition;
lsmeans order;
lsmeans order*condition / slice=condition slice=order;
ods output "Influence Diagnostics"=residuals_Base_Gesp_ord;
run;
	/* type = un fit better than type = cs */
		
proc univariate data=residuals_Base_Gesp_ord normaltest;
var student;
histogram / normal;
run;

/*      transformation needed?      */
proc univariate data=gluten_sa freq;
var delta_Gespannen ;
histogram delta_Gespannen / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* delta untransformed is normally distributed */

proc capability data=gluten_sa all normaltest;
var delta_Gespannen;
run;

/*        analysis        */
proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Gespannen = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Gespannen;
run;

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Gespannen = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) group=group r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Gespannen2;
run;
/* best fit + with group=group better fit */

proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Gespannen = group condition Day condition*Day group*condition group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@cs r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Gespannen3;
run;

	/* with condition*visit */
proc mixed data=gluten_sa;
class subject group condition visit Day Gender;
model delta_Gespannen = group condition Day condition*Day group*condition condition*visit group*Day visit Gender / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) group=group r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Gespannen;
run;

proc univariate data=residuals_delta_Gespannen normaltest;
var student;
histogram / normal;
run;

/*       color graph      */
proc datasets;
modify Gluten_graph;
      label Delta_Gespannen='Change in tension scores from baseline (100mm VAS)';
      label Time='Time (minutes)';
run;

data Gluten_graph;
set Gluten_graph;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

ods graphics on / imagename="Gespannen_sa_pat" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Gespannen_sa_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
/*condition*/
ods graphics on / imagename="Gespannen_sa_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="Gespannen_sa_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline Day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="Gespannen_sa_pat_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Gespannen_sa_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Gespannen_sa_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Gespannen_sa_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=Gluten_graph noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline day / response=Delta_Gespannen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*-------------------------------*/
/*      OPGEBLAZEN/BLOATING      */
/*-------------------------------*/
/*        Check BASELINE differences       */
proc univariate data=gluten_gi;
var Baseline_Opgeblazen;
histogram Baseline_Opgeblazen  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Transformation is better
untransformed */

/* check for main effect of condition on baseline values */
proc mixed data=gluten_gi;
class condition visit;
where Day = 3;
model Baseline_Opgeblazen = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Opgeblazen;
run;
	/* type=cs fit beter dan type=un */
	/* ---> NIET controleren voor verschillen in baseline_Opgeblazen waardes */

proc univariate data=residuals_Baseline_Opgeblazen normaltest;
var student;
histogram / normal;
run;
		
proc univariate data=residuals_Baseline_Opgeblazen_gr normaltest;
var student;
histogram / normal;
run;


/*      transformation       */
proc univariate data=gluten_gi freq;
var delta_Opgeblazen ;
histogram delta_Opgeblazen / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* delta untransformed is normaal verdeeld */

/*        analysis        */
proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model Delta_Opgeblazen = group condition Day condition*Day group*condition group*Day visit Gender/ solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_Delta_Opgeblazen;
run;
	/* final model */

	/* with condition*visit*/
proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model Delta_Opgeblazen = group condition Day condition*Day group*condition condition*visit group*Day visit Gender/ solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Delta_Opgeblazen;
run;

proc univariate data=residuals_delta_Opgeblazen normaltest;
var student;
histogram / normal;
run;

/*       color graph      */
proc datasets;
modify gluten_graph_gi;
      label Delta_Opgeblazen='Change in bloating scores from baseline (ordinal values)';
      label Time='Time (minutes)';
run;

data gluten_graph_gi;
set gluten_graph_gi;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data gluten_graph_gi;
set gluten_graph_gi;
if group = "Healthy" AND graph_condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND graph_condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND graph_condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND graph_condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="opgeblazen_sa_inter" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="Opgeblazen_sa_pat" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Opgeblazen_sa_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
/*condition*/
ods graphics on / imagename="Opgeblazen_sa_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="Opgeblazen_sa_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline Day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="opgeblazen_sa_inter_BW_test" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=topleft valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="bloating_condition_BW_phd_cal8" outputfmt=tiff noborder width = 87 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=bottomright valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

ods graphics on / imagename="Opgeblazen_sa_pat_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Opgeblazen_sa_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Opgeblazen_sa_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


ods graphics on / imagename="Opgeblazen_sa_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_condition_sa_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled) datalinepatterns=(solid);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="opgeblazen_group_sa_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="bloating_group_BW_phd_caldown" outputfmt=tiff noborder width = 87 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Opgeblazen stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=1 location=inside position=bottomleft valueattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

/*-------------------------------*/
/*        BUIKPIJN/CRAMPS        */
/*-------------------------------*/
/*        Check BASELINE differences       */
proc univariate data=gluten_gi;
var Baseline_Buikpijn;
histogram Baseline_Buikpijn  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* Check if the distribution of transformation of the variable is better. Check log transformation and BoxCox. Log transformation is 
	slightly better than non-transformed */
/*Normalize using log transformation*/
data gluten_gi; 
set gluten_gi;  
log_Baseline_Buikpijn = log10(1+Baseline_Buikpijn);
run;

proc univariate data=gluten_gi;
var log_Baseline_Buikpijn;
histogram log_Baseline_Buikpijn  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	/* log_Baseline_Buikpijn is better than untransformed data */

/* check for main effect of condition on baseline values */
proc mixed data=gluten_gi;
class condition visit;
where Day = 3;
model log_Baseline_Buikpijn = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_Buikpijn;
run;
	/* type=cs fit better than type=un */

proc univariate data=residuals_Baseline_Buikpijn normaltest;
var student;
histogram / normal;
run;

/*      transformation       */
proc univariate data=gluten_gi freq;
var delta_Buikpijn ;
histogram delta_Buikpijn / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
/* delta untransformed is normally distributed */

/*        analysis        */
proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model delta_Buikpijn = group condition Day condition*Day group*condition group*Day visit Gender log_Baseline_Buikpijn / solution residual influence;
repeated condition Day / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Buikpijn;
run;

proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model delta_Buikpijn = group condition Day condition*Day group*condition group*Day visit Gender log_Baseline_Buikpijn / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Buikpijn2;
run;

proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model delta_Buikpijn = group condition Day condition*Day group*condition group*Day visit Gender log_Baseline_Buikpijn / solution residual influence;
repeated condition Day / subject=subject type=un@cs r rcorr;
lsmeans condition;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Buikpijn3;
run;

/* separate variance-covariance structure per group */
proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model delta_Buikpijn = group condition Day condition*Day group*condition group*Day visit Gender log_Baseline_Buikpijn / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) group=group r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
ods output "Influence Diagnostics"=residuals_delta_Buikpijn4;
run;
	/* fit is better with group=group */

	/* with condition*visit*/
proc mixed data=gluten_gi;
class subject group condition visit Day Gender;
model delta_Buikpijn = group condition Day condition*Day group*condition condition*visit group*Day visit Gender log_Baseline_Buikpijn / solution residual influence;
repeated condition Day / subject=subject type=un@ar(1) group=group r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_delta_Buikpijn4;
run;

proc univariate data=residuals_delta_Buikpijn4 normaltest;
var student;
histogram / normal;
run;

/*       color graph      */
proc datasets;
modify gluten_graph_gi;
      label Delta_Buikpijn='Change in abdominal pain scores from baseline (ordinal values)';
      label Time='Time (minutes)';
run;

data gluten_graph_gi;
set gluten_graph_gi;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data gluten_graph_gi;
set gluten_graph_gi;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="buikpijn_sa_inter" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="Buikpijn_sa_pat" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Buikpijn_sa_hv" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
/*condition*/
ods graphics on / imagename="Buikpijn_sa_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="Buikpijn_sa_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline Day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=group1 markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/*        Black & White     */
ods graphics on / imagename="Buikpijn_sa_inter_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=topleft valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;
	/* iets grotere max marge op y-as, anders lag legende in de grafiek */

ods graphics on / imagename="buikpijn_inter_BW_cal8" outputfmt=tiff noborder width = 87 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside position=bottomright valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

ods graphics on / imagename="Buikpijn_sa_pat_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Buikpijn_sa_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="Buikpijn_sa_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


ods graphics on / imagename="Buikpijn_sa_group_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Circlefilled Squarefilled) datalinepatterns=(15 29);
vline day / response=Delta_Buikpijn stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="buikpijn_condition_sa_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled) datalinepatterns=(solid);
vline day / response=Delta_buikpijn stat=mean limits=upper limitstat=stderr group = graph_condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="buikpijn_group_sa_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\subacute\B&W" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_buikpijn stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="buikpijn_group_BW_phd_caldown" outputfmt=tiff noborder width = 87 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=gluten_graph_gi noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline day / response=Delta_buikpijn stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=1 location=inside position=bottomleft valueattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-2 max=2.5 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

/*--------------*/
/*   2) PANAS   */
/*--------------*/
/*-------------------------------*/
/*      IMPORT SAS university    */
/*-------------------------------*/
PROC IMPORT DATAFILE="/folders/myfolders/Results_acute_phd_Julie_AG.xlsx"
	DBMS=XLSX
	OUT=WORK.gluten_panas;
	sheet="PANAS_SAS";
RUN;

PROC PRINT DATA=WORK.gluten_panas; 
RUN;

/* test baseline differences before (visit 1=introduction visit) and after (visit 2) run-in */
/* Pos */
proc mixed data=gluten_panas;
where visit < 3;
class subject group visit;
model Pos = visit group visit*group / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans group;
lsmeans visit;
lsmeans visit*group / slice=group slice=visit;
ods output "Influence Diagnostics"=residuals_PA;
run; 

proc univariate data=residuals_PA normaltest;
var student;
histogram / normal;
run;

/* Neg */
proc mixed data=gluten_panas;
where visit < 3;
class subject group visit;
model Neg = visit group visit*group / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans group;
lsmeans visit;
lsmeans visit*group / slice=group slice=visit;
ods output "Influence Diagnostics"=residuals_NA;
run; 

proc univariate data=residuals_NA normaltest;
var student;
histogram / normal;
run;

/* test visit*condition interaction and potential carry-over (see Kenward & Roger pp68-)*/
/* Pos */
proc mixed data=gluten_panas;
where visit > 1;
class subject group visit order condition_order;
model Pos = visit condition_order condition_order*visit / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans condition_order;
lsmeans visit;
lsmeans visit*condition_order / slice=condition_order slice=visit;
estimate 'test for carryover to second baseline' visit*condition_order 1 -1 0 0 -1 1 0 0;
estimate 'test for condition-by-visit interaction' visit*condition_order 0.5 -0.5 -0.5 0.5 0.5 -0.5 -0.5 0.5;
estimate 'test for condition effect (only if two others are non-significant)' visit*condition_order 0 0 1 -1 0 0 -1 1;
run; 

/* Neg */
proc mixed data=gluten_panas;
where visit > 1;
class subject group visit order condition_order;
model Neg = visit condition_order condition_order*visit / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans condition_order;
lsmeans visit;
lsmeans visit*condition_order / slice=condition_order slice=visit;
estimate 'test for carryover to second baseline' visit*condition_order 1 -1 0 0 -1 1 0 0;
estimate 'test for condition-by-visit interaction' visit*condition_order 0.5 -0.5 -0.5 0.5 0.5 -0.5 -0.5 0.5;
estimate 'test for condition effect (only if two others are non-significant)' visit*condition_order 0 0 1 -1 0 0 -1 1;
run; 


/* analysis */
/* Pos */
proc mixed data=gluten_panas;
where visit = 3 OR visit = 5;
class subject group condition visit;
model Pos = group condition group*condition visit visit*condition / solution residual influence cl;
repeated visit / subject = subject type=un r rcorr;
lsmeans group;
lsmeans condition;
/* lsmeans visit; */
lsmeans group*condition / slice=group slice=condition;
run;

/* Neg */
proc mixed data=gluten_panas;
where visit = 3 OR visit = 5;
class subject group condition visit;
model Neg = group condition group*condition visit visit*condition / solution residual influence cl;
repeated visit / subject = subject type=un r rcorr;
lsmeans group;
lsmeans condition;
/* lsmeans visit; */
lsmeans group*condition / slice=group slice=condition;
run;

/*        graphs      */
proc datasets;
modify gluten_panas;
      label Pos='Positive PANAS score';
	  label Neg='Negative PANAS score';
run;

data gluten_panas;
set gluten_panas;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

/* for interaction effect */
data Gluten_panas;
set Gluten_panas;
/* if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";*/
if group = "Healthy"  AND Condition_order = "placebo_first" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy"  AND Condition_order = "gluten_first" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition_order = "placebo_first" then condition2 = "NCGS - placebo";
if group = "Patient"  AND Condition_order = "gluten_first" then condition2 = "NCGS - gluten";
run;

data Gluten_panas;
set Gluten_panas;
if visit = "1" then visit2 = "Introduction visit";
if visit = "2" then visit2 = "Test visit 1";
if visit = "3" then visit2 = "Test visit 2";
if visit = "4" then visit2 = "Test visit 3";
if visit = "5" then visit2 = "Test visit 4";
run;

proc datasets;
modify gluten_panas;
      label Visit2 = "Visit";
run;

/*---------------------------*/
/*   3) Biological samples   */
/*---------------------------*/
/*-------------------------------*/
/*              IP               */
/*-------------------------------*/
/* Generated Code (IMPORT) */
/* Source File: Results_acute_phd_Julie_AG.xlsx */
/* Source Path: /home/u59173267/sasuser.v94 */
/* Code generated on: 8/16/21, 9:08 AM */

%web_drop_table(WORK.gluten_ip);


FILENAME REFFILE '/home/u59173267/sasuser.v94/Results_acute_phd_Julie_AG.xlsx';

PROC IMPORT DATAFILE=REFFILE
	DBMS=XLSX
	OUT=WORK.gluten_ip;
	sheet="IP_SAS";
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.gluten_ip; RUN;


/*        Check baseline differences       */
proc univariate data=gluten_ip;
where time = 0;
var LMR;
histogram LMR  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

data gluten_ip; 
set gluten_ip; 
/*where time = 0; */
log_Baseline_LMR = log10(0.02+LMR);
run;

proc univariate data=gluten_ip;
where time = 0;
var log_Baseline_LMR;
histogram log_Baseline_LMR  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	 /* log data is better distributed */


/* check per group */
proc mixed data=gluten_ip;
class condition group;
where time = 0;
model log_baseline_LMR = /*condition*/ group /*group*condition*/ / solution residual influence;
repeated condition / sub=subject type=un r rcorr;
lsmeans group;
ods output "Influence Diagnostics"=residuals_Baseline_LMR;
run;
	/* type = un is beter then type=cs */

proc univariate data=residuals_Baseline_LMR normaltest;
var student;
histogram / normal;
run;
	/* No baseline differences */

/*      transformation needed?       */
proc univariate data=gluten_ip freq;
var LMR;
where time > 0;
histogram LMR / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

proc freq data=Gluten_ip;
where time > 0;
table LMR;
run; 

data gluten_ip; 
set gluten_ip; 
/*where time = 0; */ 
log_LMR = log10(0.01+LMR);
run;


proc univariate data=gluten_ip;
where time > 0;
var log_LMR;
histogram log_LMR  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;
	 /* log data is better distributed */

/* test baseline differences before and after run-in */
proc mixed data=gluten_ip;
where visit < 3;
class subject group visit;
model log_LMR = visit group visit*group / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans group;
lsmeans visit;
lsmeans visit*group / slice=group slice=visit;
run; 

/* test carryover, condition-by-visit interaction, and condition effect (see Kenward & Roger pp68-)*/
proc mixed data=gluten_ip;
where visit > 1;
class subject group visit order condition_order;
model log_LMR = visit condition_order condition_order*visit / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans condition_order;
lsmeans visit;
lsmeans visit*condition_order / slice=condition_order slice=visit;
estimate 'test for carryover to second baseline' visit*condition_order 1 -1 0 0 -1 1 0 0;
estimate 'test for condition-by-visit interaction' visit*condition_order 0.5 -0.5 -0.5 0.5 0.5 -0.5 -0.5 0.5;
estimate 'test for condition effect given the two others are non-significant' visit*condition_order 0 0 1 -1 0 0 -1 1;
run; 

/*        analysis        */
proc mixed data=gluten_ip;
where time > 0;
class subject group condition order time Gender;
model log_LMR = group condition order time condition*time group*condition group*time Gender / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_LMR1;
run;

proc mixed data=gluten_ip;
where time > 0;
class subject group condition order time Gender;
model log_LMR = group condition order time condition*time group*condition group*time Gender / solution residual influence;
repeated condition time / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_LMR2;
run;

proc mixed data=gluten_ip;
where time > 0;
class subject group condition order time Gender;
model log_LMR = group condition order time condition*time group*condition group*time Gender / solution residual influence;
repeated condition time / subject=subject type=un@cs r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_LMR3;
run;

/* separate variance-covariance structure per group */
proc mixed data=gluten_ip;
where time > 0;
class subject group condition order time Gender;
model log_LMR = group condition time order condition*time group*condition group*time Gender / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans order;
lsmeans group*condition / slice = group slice = condition;
lsmeans condition*time / slice = condition slice = time;
ods output "Influence Diagnostics"=residuals_LMR4;
run;

	/* fit is better: FINAL MODEL */

proc univariate data=residuals_LMR4 normaltest;
var student;
histogram / normal;
run;
/* residuals not normal but symmetrical */

/* carry over effect */
proc mixed data=gluten_ip;
where time = 1;
class subject group condition order Gender;
model log_LMR = group condition order group*condition condition*order Gender / solution residual influence;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_LMR1;
run;
 /* type=un is better than type=ar(1) */

proc mixed data=gluten_ip;
where time = 1;
class subject group condition order Gender;
model log_LMR = group condition order group*condition condition*order Gender / solution residual influence;
repeated condition / subject=subject group=group type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*order / slice = condition slice = order;
ods output "Influence Diagnostics"=residuals_LMR1;
run;
	/* fit is better */

/*        graph      */
data gluten_ip;
set gluten_ip;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

data gluten_ip;
set gluten_ip;
if time = "2" then time1 = "After sub-acute administration";
if time = "1" then time1 = "Before acute administration";
run;
	/* draait om op grafiek. bizar */

proc datasets;
modify gluten_ip;
      label LMR ='Intestinal permeability (Lactulose/mannitol ratio)';
run;

data Gluten_ip;
set Gluten_ip;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="LMR_inter" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_ip noborder nowall /*noautolegend*/ ;
where time > 0;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=LMR stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=0 max=0.1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="vermoeid_group" outputfmt=tiff noborder;
ods html path="D:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_ip noborder nowall /*noautolegend*/ ;
/*where group = "Patient";*/
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_Vermoeid stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods printer close;
ods html path="C:\Users\Annelies\Desktop\gluten_sas";

/* graph condition */
ods graphics on / imagename="LMR_condition" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_ip noborder nowall /*noautolegend*/ ;
where time > 0;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=LMR stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6)  lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=0 max=0.1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* per group */
ods graphics on / imagename="LMR_group" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_ip noborder nowall /*noautolegend*/ ;
where time > 0;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=LMR stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=0 max=0.1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* boxplot */
ods graphics on / imagename="LMR_box" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data = gluten_ip noborder nowall noautolegend;
where time > 0;
vbox LMR / category = condition2 groupdisplay = cluster;
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis values=(0,0.05,0.1) valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=0 max=0.2 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


/*-------------------------------*/
/*              CAR              */
/*-------------------------------*/

proc import
out= work.gluten_car
datafile="/folders/myfolders/Results_acute_phd_Julie_AG.xlsx"
DBMS=XLSX REPLACE;
sheet="CAR_SAS";
run;

proc univariate data=gluten_car freq;
var car;
histogram car / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* transformation */
data gluten_car; 
set gluten_car;  
log_car = log10(-0.4+car);
run;

proc univariate data=gluten_car freq;
var log_car;
histogram log_car / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/* test carryover, condition-by-visit interaction, and condition effect (see Kenward & Roger pp68-)*/
proc mixed data=gluten_car;
class subject group visit condition_order time;
model log_car = visit condition_order condition_order*visit / solution residual influence;
repeated visit time / subject = subject type=un@un r rcorr;
lsmeans condition_order;
lsmeans visit;
lsmeans visit*condition_order / slice=condition_order slice=visit;
estimate 'test for carryover to second baseline' visit*condition_order 1 -1 0 0 -1 1 0 0;
estimate 'test for condition-by-visit interaction' visit*condition_order 0.5 -0.5 -0.5 0.5 0.5 -0.5 -0.5 0.5;
estimate 'test for treatment effect given the two others are non-significant' visit*condition_order 0 0 1 -1 0 0 -1 1;
run; 

/* same for first timepoint only */
proc mixed data=gluten_car;
class subject group visit condition_order;
where time = 0;
model log_car = visit condition_order condition_order*visit / solution residual influence;
repeated visit / subject = subject type=un r rcorr;
lsmeans condition_order;
lsmeans visit;
lsmeans visit*condition_order / slice=condition_order slice=visit;
estimate 'test for carryover to second baseline' visit*condition_order 1 -1 0 0 -1 1 0 0;
estimate 'test for condition-by-visit interaction' visit*condition_order 0.5 -0.5 -0.5 0.5 0.5 -0.5 -0.5 0.5;
estimate 'test for treatment effect given the two others are non-significant' visit*condition_order 0 0 1 -1 0 0 -1 1;
run; 

proc sort data=gluten_car;
by condition_c;
run;

proc mixed data=gluten_car;
class subject group condition_c time visit;
where condition_c = 'Run_in' OR condition_c = 'Wash_out';
model log_car = group condition_c time group*condition_c group*time condition_c*time group*time*condition_c / solution residual influence cl;
repeated visit time / subject = subject type=un@un r rcorr;
lsmeans group;
lsmeans condition_c;
lsmeans time;
lsmeans group*condition_c / slice=group slice=condition_c;
lsmeans group*time / slice=group slice=time;
lsmeans condition_c*time / slice=condition_c slice=time;
lsmeans group*time*condition_c / slice=group slice=time slice=condition_c;
run;

proc mixed data=gluten_car;
class subject condition_order time visit;
where visit = 2 OR visit = 4;
model log_car = condition_order visit time visit*time condition_order*time condition_order*visit*time / solution residual influence cl;
repeated visit time / subject = subject type=un@un r rcorr;
lsmeans condition_order;
lsmeans time;
lsmeans condition_order*time / slice=condition_order slice=time;
run;
/* lack of baseline differences confirmed in different ways */

/* analysis */
proc mixed data=gluten_car;
class subject group condition_c time visit;
where condition_c = 'Gluten' OR condition_c = 'Placebo';
model log_car = group condition_c time group*condition_c group*time condition_c*time group*time*condition_c visit visit*condition_c / solution residual influence cl;
repeated visit time / subject = subject type=un@un r rcorr;
lsmeans group;
lsmeans condition_c;
lsmeans time;
lsmeans group*condition_c / slice=group slice=condition_c;
lsmeans group*time / slice=group slice=time;
lsmeans condition_c*time / slice=condition_c slice=time;
lsmeans group*time*condition_c / slice=group slice=time slice=condition_c;
run;

proc mixed data=gluten_car;
class subject group condition_c time visit;
where condition_c = 'Gluten' OR condition_c = 'Placebo';
model log_car = group condition_c time group*condition_c group*time condition_c*time visit visit*condition_c / solution residual influence cl;
repeated visit time / subject = subject type=un@un r rcorr;
lsmeans group;
lsmeans condition_c;
lsmeans time;
lsmeans group*condition_c / slice=group slice=condition_c;
lsmeans group*time / slice=group slice=time;
lsmeans condition_c*time / slice=condition_c slice=time;
run;

/* difference between visit 3 and 5*/
/*        analysis        */
proc mixed data=gluten_car;
where visit = 3 or visit = 5;
class subject group condition visit time Gender;
model log_car = group condition visit time group*condition group*time time*condition Gender / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition group group*condition  / slice=condition slice=group;
lsmeans  group*time  /slice=group slice =time;
lsmeans condition*time / slice=condition slice =time;
ods output "Influence Diagnostics"=residuals_log_car1;
run;

proc univariate data=residuals_log_car1 normaltest;
var student;
histogram / normal;
run;

/* difference between visit 2 and 4*/
/*        analysis        */
proc mixed data=gluten_car;
where visit = 2 or visit = 4;
class subject group condition visit time Gender;
model log_car = group condition visit time group*condition group*time time*condition Gender / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition group group*condition  / slice=condition slice=group;
lsmeans  group*time  /slice=group slice =time;
lsmeans condition*time / slice=condition slice =time;
ods output "Influence Diagnostics"=residuals_log_car1;
run;

proc univariate data=residuals_log_car1 normaltest;
var student;
histogram / normal;
run;

/*-------------------------------*/
/*        cortisol acute         */
/*-------------------------------*/

proc import
out= work.gluten_cort
datafile="/folders/myfolders/Results_acute_phd_Julie_AG.xlsx"
DBMS=XLSX REPLACE;
sheet="cortisol_SAS";
run;

/*        Check baseline differences       */
proc univariate data=gluten_cort;
var Baseline_cortisol;
histogram Baseline_cortisol  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

data gluten_cort; 
set gluten_cort;  
log_baseline_cortisol = log10(-1.2+baseline_cortisol);
run;

proc univariate data=gluten_cort;
var log_baseline_cortisol;
histogram log_baseline_cortisol  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

proc mixed data=gluten_cort;
class condition visit;
where time = -10;
model log_Baseline_cortisol = condition visit condition*visit / solution residual influence;
repeated condition / sub=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans condition*visit / slice=condition slice=visit;
ods output "Influence Diagnostics"=residuals_Baseline_cortisol;
run;
	/* controleren voor main effect of condition op baseline_cortisol waardes */

proc univariate data=residuals_Baseline_cortisol normaltest;
var student;
histogram / normal;
run;

/* check distribution of cortisol variable */
proc univariate data=gluten_cort;
var cortisol_level;
histogram cortisol_level  / normal (mu=est sigma=est) lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

data gluten_cort;
set gluten_cort;
log_cortisol_level = log10(0.27 + cortisol_level);
run;

proc univariate data=gluten_cort;
var log_cortisol_level;
histogram log_cortisol_level / normal;
run;

/* check for carryover, condition-by-visit interaction, and condition effect (see Kenward & Roger pp68-) */
proc mixed data=gluten_cort;
class subject condition_order visit condition time;
model log_cortisol_level = condition_order visit condition / solution influence residual cl;
random subject(condition_order);
repeated time;
lsmeans condition;
lsmeans visit;
run;

/* same on first timepoint only */
proc mixed data=gluten_cort;
class subject condition_order visit condition;
where time = -10;
model log_cortisol_level = condition_order visit condition / solution influence residual cl;
random subject(condition_order);
lsmeans condition;
lsmeans visit;
run;

/* same with time effects included */
proc mixed data=gluten_cort;
class subject condition_order visit condition time;
model log_cortisol_level = condition_order visit condition time time*condition_order time*visit time*condition / solution influence residual cl;
random subject(condition_order);
repeated time;
lsmeans condition;
lsmeans visit;
run;

/* analysis */
proc mixed data=gluten_cort;
class subject condition group time visit;
model log_cortisol_level = condition group time condition*group condition*time group*time condition*group*time visit visit*condition / solution residual influence cl;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*time / slice=condition slice=time;
lsmeans group*time / slice=time slice=group;
lsmeans condition*group*time / slice=condition slice=group slice=time;
run;

/* repeat code voor delta-cortisol */
proc mixed data=gluten_cort;
where time > -10;
class subject condition group time visit;
model delta_cortisol = condition group time condition*group condition*time group*time condition*group*time visit visit*condition / solution residual influence cl;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*time / slice=condition slice=time;
lsmeans group*time / slice=time slice=group;
lsmeans condition*group*time / slice=condition slice=group slice=time;
run;
	/* un@un fit best */

proc univariate data=gluten_cort;
var delta_cortisol;
histogram delta_cortisol  / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

/*      transformation       */
proc univariate data=gluten_cort freq;
where time > -10;
var delta_cortisol ;
histogram delta_cortisol / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

proc capability data=gluten_cort all normaltest;
var delta_cortisol;
run;

/*        analysis        */
proc mixed data=gluten_cort;
where time > -10;
class subject group condition visit time Gender;
model delta_cortisol = group condition time condition*time group*condition group*time visit log_baseline_cortisol Gender / solution residual influence;
repeated condition time / subject=subject type=un@un r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_cortisol3;
run;

proc mixed data=gluten_cort;
where time > -10;
class subject group condition visit time Gender;
model delta_cortisol = group condition time condition*time group*condition group*time visit log_baseline_cortisol Gender / solution residual influence;
repeated condition time / subject=subject type=un@ar(1) r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_cortisol3;
run;

proc mixed data=gluten_cort;
where time > -10;
class subject group condition visit time Gender;
model delta_cortisol = group condition time condition*time group*condition group*time visit log_baseline_cortisol Gender / solution residual influence;
repeated condition time / subject=subject type=un@cs r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_delta_cortisol3;
run;

/* separate variance-covariance structure per group */
proc mixed data=gluten_cort;
where time > -10;
class subject group condition visit time Gender;
model delta_cortisol = group condition time condition*time group*condition group*time visit log_baseline_cortisol Gender / solution residual influence;
repeated condition time / subject=subject group=group type=un@ar(1) r rcorr;
lsmeans condition;
lsmeans group;
lsmeans time;
lsmeans condition*group / slice=condition slice=group;
lsmeans condition*time / slice= condition slice = time;
ods output "Influence Diagnostics"=residuals_delta_cortisol4;
run;
	/* fit is better: FINAL MODEL */

proc univariate data=residuals_delta_cortisol4 normaltest;
var student;
histogram / normal;
run;

/*        graph color      */
proc datasets;
modify gluten_cort;
      label Delta_cortisol='Change in cortisol levels from baseline (ng/ml)';
      label Time='Time (minutes)';
run;

data gluten_cort;
set gluten_cort;
if group = "Healthy" then group1 = "Healthy volunteers";
if group = "Patient" then group1 = "NCGS";
run;

/* for interaction effect */
data gluten_cort;
set gluten_cort;
if group = "Healthy" AND Condition = "Placebo" then condition2 = "Healthy volunteers - placebo";
if group = "Healthy" AND Condition = "Gluten" then condition2 = "Healthy volunteers - gluten";
if group = "Patient" AND Condition = "Placebo" then condition2 = "NCGS - placebo";
if group = "Patient" AND Condition = "Gluten" then condition2 = "NCGS - gluten";
run;

/* interaction */
ods graphics on / imagename="cortisol_inter6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=8 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* interaction split out */
ods graphics on / imagename="cortisol_patient" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

/* main effects */
ods graphics on / imagename="cortisol_condition6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(STEEL VIPK) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_group6" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(VIRP VIG) datasymbols=(Diamondfilled Squarefilled) /*datalinepatterns=(solid shortdash)*/;
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;


/*        Black & White     */
ods graphics on / imagename="cortisol_inter_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_inter_BW_cal" outputfmt=tiff noborder width = 87 mm;;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition2 markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=4 location=inside position=topleft valueattrs=(Color=Black Family=Calibri Size=7 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

ods graphics on / imagename="cortisol_patient_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
where group = "Patient";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_hv_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
where group = "Healthy";
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_condition_BW" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-1 max=4 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_condition_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled) datalinepatterns=(solid);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis values=(-10, 5, 60, 120, 180) valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_group_BW_phd" outputfmt=tiff noborder;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\BW" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL) datasymbols=(Diamondfilled Trianglefilled) datalinepatterns=(solid shortdash);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=group1 markers markerattrs=(size=6) lineattrs=(/*pattern=solid*/ thickness=2.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder down=2 location=inside valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold*/);
xaxis values=(-10, 5, 60, 120, 180) valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
yaxis valueattrs=(Color=Black Family=Arial Size=10 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Arial Size=10 /* Style=Italic */ Weight=Bold);
run;

ods graphics on / imagename="cortisol_condition_BW_phd_cal" outputfmt=tiff noborder width = 87 mm;
ods html path="E:\Protocols\ProtocolGLUTEN HEALTHY_S58915\Results\Analysis\figures\Phd\calibri" image_DPI=500;
proc sgplot data=gluten_cort noborder nowall /*noautolegend*/ ;
styleattrs datacontrastcolors=(BL GR) datasymbols=(Diamondfilled) datalinepatterns=(solid);
vline time / response=Delta_cortisol stat=mean limits=upper limitstat=stderr group=condition markers markerattrs=(size=4) lineattrs=(/*pattern=solid*/ thickness=1.5) 
limitattrs=(pattern=solid thickness=1.5) nostatlabel /*groupdisplay=cluster*/; 
keylegend / title =" " noborder /*down=1*/ location=inside /*position=topleft*/ valueattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic Weight=Bold*/);
xaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
yaxis valueattrs=(Color=Black Family=Calibri Size=8 /* Style=Italic Weight=Bold */) min=-4 max=1 labelattrs=(Color=Black Family=Calibri Size=10 /* Style=Italic */ /*Weight=Bold*/);
run;

/*-------------------------------*/
/*           hsCRP               */
/*-------------------------------*/
proc import
out= work.gluten_hscrp
datafile="/folders/myfolders/Results_acute_phd_Julie_AG.xlsx"
DBMS=XLSX REPLACE;
sheet="hsCRP_SAS";
run;

proc univariate data=gluten_hscrp freq;
var hsCRP;
histogram hsCRP / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est) midpoints = 0 to 7 by 0.05;
run;

proc freq data=Gluten_hscrp;
where visit > 1;
table hsCRP;
run; 

/* check distributions */
proc univariate data=gluten_hscrp freq;
where visit = 1;
var hsCRP;
histogram hsCRP / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est) /*midpoints = 0 to 6 by 0.05*/;
run;

proc univariate data=gluten_hscrp freq;
where visit NE 1;
var hsCRP;
histogram hsCRP / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est) /*midpoints = 0 to 6 by 0.05*/;
run;

proc univariate data=gluten_hscrp freq;
var baseline_hsCRP;
histogram baseline_hsCRP / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est) /*midpoints = 0 to 6 by 0.05*/;
run;

data gluten_hscrp;
set gluten_hscrp;
log_baseline_hsCRP = log (1 + baseline_hsCRP);
run;

proc univariate data=gluten_hscrp freq;
var log_baseline_hsCRP;
histogram log_baseline_hsCRP / normal ;
run;

/* check baseline differences */
proc glm data=gluten_hscrp;
where visit = 1;
class group;
model log_baseline_hsCRP = group / solution;
lsmeans group;
run;

proc glm data=gluten_hscrp;
where visit = 1;
class condition_order;
model log_baseline_hsCRP = condition_order / solution;
lsmeans condition_order;
run;

/* controlling for baseline level */
proc mixed data=gluten_hscrp;
where visit > 1;
class subject condition_order visit condition;
model log_hsCRP = condition_order visit condition baseline_hsCRP / solution influence residual cl;
random subject(condition_order);
lsmeans condition;
run;
/* carry-over effects not equal, and significant visit effect, no effect of condition */

/* analysis */
proc mixed data=gluten_hscrp;
where visit = 1;
class subject condition group;
model log_hsCRP = condition group condition*group / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit > 1;
class subject condition group;
model log_hsCRP = condition group condition*group baseline_hsCRP / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit = 3;
class subject condition group;
model log_hsCRP = condition group condition*group / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit = 3;
class subject condition group;
model log_hsCRP = condition group condition*group baseline_hsCRP / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit = 5;
class subject condition group;
model log_hsCRP = condition group condition*group / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit = 5;
class subject condition group;
model log_hsCRP = condition group condition*group baseline_hsCRP / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit > 1;
class subject condition group;
model log_hsCRP = condition group condition*group visit visit*condition / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

proc mixed data=gluten_hscrp;
where visit > 1;
class subject condition group;
model log_hsCRP = condition group condition*group visit visit*condition baseline_hsCRP / solution residual influence cl;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
lsmeans group;
lsmeans condition*group / slice=condition slice=group;
run;

/* visit 3 & 5 */
data gluten_hscrp_visit3_5;
set gluten_hscrp;
if visit = 1 then delete;
if hsCRP < 0.18 then hsCRP_quart = 0;
if 0.179999 < hsCRP < 0.73 then hsCRP_quart = 1;
if 0.729999 < hsCRP < 1.86 then hsCRP_quart = 2;
if hsCRP > 1.859999 then hsCRP_quart = 3;
run;

proc freq data=gluten_hscrp_visit3_5;
table hsCRP_quart;
run;


/* check for equality of carry-over, visit and condition effect */
proc glimmix data=gluten_hscrp_visit3_5 initglm;
class hsCRP_quart subject condition_order visit condition;
model hsCRP_quart = condition_order visit condition condition_order*visit / solution or chisq cl link=cumlogit dist=multinomial;
random subject;
run;
/* carry-over effects not equal, trend for visit effect, no effect of condition */


proc glimmix data=gluten_hscrp_visit3_5 initglm method=quad(qpoints=5);
class hsCRP_quart subject condition_order visit condition;
model hsCRP_quart = condition_order visit condition log_baseline_hsCRP / solution or chisq cl link=cumlogit dist=multinomial;
random condition_order / subject=subject;
run;
/* no carry-over, no visit effect, no effect of condition after controlling for baseline hsCRP */

/* analysis */
proc glimmix data=gluten_hscrp_visit3_5 initglm;
class hsCRP_quart subject condition group;
model hsCRP_quart = condition group condition*group / solution or chisq cl link=cumlogit dist=multinomial;
random subject;
run;

proc glimmix data=gluten_hscrp_visit3_5 initglm;
class hsCRP_quart subject condition group;
model hsCRP_quart = condition group condition*group baseline_hsCRP / solution or chisq cl link=cumlogit dist=multinomial;
random subject;
run;

proc glimmix data=gluten_hscrp_visit3_5 initglm;
class hsCRP_quart subject condition group visit;
model hsCRP_quart = condition group condition*group visit visit*condition / solution or chisq cl link=cumlogit dist=multinomial;
random subject;
run;

proc glimmix data=gluten_hscrp_visit3_5 initglm;
class hsCRP_quart subject condition group visit;
model hsCRP_quart = condition group condition*group visit visit*condition log_baseline_hsCRP / solution or chisq cl link=cumlogit dist=multinomial;
random subject;
run;

/*        Check baseline differences between groups at time of run-in      */
proc univariate data=gluten_hscrp freq;
where visit = 1;
var log_hsCRP;
histogram log_hsCRP / normal lognormal (theta=est sigma=est zeta=est) gamma (theta=est sigma=est alpha=est);
run;

proc mixed data=gluten_hscrp;
class subject group;
where visit = 1;
model log_hsCRP = group/ solution residual influence;
lsmeans group;
ods output "Influence Diagnostics"=residuals_Baseline_hsCRP;
run;
/* kan ook met t-test */

proc ttest data=gluten_hscrp plots=all;
where visit = 1;
class group; 
var log_hsCRP;
run;

proc univariate data=residuals_Baseline_hsCRP normaltest;
var student;
histogram / normal;
run;

/*        analysis        */
proc mixed data=gluten_hscrp;
where visit > 1;
class subject group condition visit Gender;
model log_hsCRP = group condition visit group*condition Gender / solution residual influence;
repeated condition / subject=subject type=un r rcorr;
lsmeans condition;
ods output "Influence Diagnostics"=residuals_log_hsCRP3;
run;

proc mixed data=gluten_hscrp;
where visit > 1;
class subject group condition visit Gender;
model log_hsCRP = group condition visit group*condition condition*visit Gender /*group*visit*/ / solution residual influence;
repeated condition / subject=subject type=cs r rcorr;
lsmeans condition;
lsmeans visit;
lsmeans group;
lsmeans group*condition / slice= group slice=condition;
lsmeans condition*visit / slice = condition slice = visit;
/*lsmeans group*visit / slice = group slice = visit;*/
ods output "Influence Diagnostics"=residuals_log_hsCRP;
run;
	/* best fit */

/* separate variance-covariance structure per group */
proc mixed data=gluten_hscrp;
where visit > 1;
class subject group condition visit Gender;
model log_hsCRP = group condition visit group*condition Gender / solution residual influence;
repeated condition / subject=subject group=group type=cs r rcorr;
lsmeans condition;
lsmeans group*condition / slice= group slice=condition;
ods output "Influence Diagnostics"=residuals_log_hsCRP4;
run;
	/* fit is worse */

proc univariate data=residuals_log_hsCRP3 normaltest;
var student;
histogram / normal;
run;
/* residuals not normal but symmetrical */

/* try with order */
proc mixed data=gluten_hscrp;
where visit > 1;
class subject group condition order Gender;
model log_hsCRP = group condition order group*condition condition*order Gender /*group*visit*/ / solution residual influence;
repeated condition / subject=subject type=cs r rcorr;
lsmeans condition;
lsmeans group;
lsmeans order;
lsmeans group*condition / slice= group slice=condition;
lsmeans condition*order / slice = condition slice = order;
ods output "Influence Diagnostics"=residuals_log_hsCRP;
run;